declare function hasAnyFlags(flags: any, mask: any): boolean;
declare function hasFlags(flags: any, mask: any): boolean;
declare function is(val1: any, val2: any): boolean;
declare function isArray(val: any): boolean;
declare function isBufferArray(val: any): boolean;
declare function isBlankObject(val: any): boolean;
declare function isBoolean(val: any): boolean;
declare function isDate(val: any): boolean;
declare function isEmpty(val: any): boolean;
declare function isEqual(val1: any, val2: any): boolean;
declare function isFunction(val: any): boolean;
declare function isHash(val: any): boolean;
declare function isInteger(val: any): boolean;
declare function isRegExp(val: any): boolean;
declare function isString(val: any): boolean;
declare function isTypedArray(val: any): boolean;
declare function isNull(val: any): boolean;
declare function isNumber(val: any): boolean;
declare function isObject(val: any): boolean;
declare function isPromise(val: any): boolean;
declare function isWindow(val: any): boolean;
export declare const quality: {
    hasAnyFlags: typeof hasAnyFlags;
    hasFlags: typeof hasFlags;
    is: typeof is;
    isArray: typeof isArray;
    isBlankObject: typeof isBlankObject;
    isBoolean: typeof isBoolean;
    isBufferArray: typeof isBufferArray;
    isDate: typeof isDate;
    isEmpty: typeof isEmpty;
    isEqual: typeof isEqual;
    isFunction: typeof isFunction;
    isHash: typeof isHash;
    isInteger: typeof isInteger;
    isNaN: typeof isNaN;
    isNull: typeof isNull;
    isNumber: typeof isNumber;
    isObject: typeof isObject;
    isPromise: typeof isPromise;
    isRegExp: typeof isRegExp;
    isString: typeof isString;
    isTypedArray: typeof isTypedArray;
    isWindow: typeof isWindow;
};
export {};
